/*
 * ov16a1q_ofilm_sensor.h
 *
 * Copyright (c) 2018-2019 Huawei Technologies Co., Ltd.
 *
 * ov16a1q_ofilm image sensor config settings
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 */

#ifndef _OV16A1Q_OFILM_SENSOR_H
#define _OV16A1Q_OFILM_SENSOR_H

#include "imgsensor_sensor_common.h"
#include "kd_imgsensor.h"

#define OV16A1Q_OTP_FUNCTION

#define SENSOR_FRM_LENGTH_LINES_REG_H 0x0006
#define SENSOR_FRM_LENGTH_LINES_REG_L 0x0007
#define SENSOR_LINE_LENGTH_PCK_REG_H 0x0008
#define SENSOR_LINE_LENGTH_PCK_REG_L 0x0009
#define SENSOR_IMAGE_ORIENTATION 0x000e
#define SENSOR_ISP_EN_REG_H 0x0a04
#define SENSOR_ISP_EN_REG_L 0x0a05
#define SENSOR_TP_MODE_REG 0x020a

#define SENSOR_INTEG_TIME_REG_H 0x0074
#define SENSOR_INTEG_TIME_REG_L 0x0075
#define SENSOR_ANA_GAIN_REG 0x0076

#define SENSOR_MODULE_ID_REG_H 0x0F17
#define SENSOR_MODULE_ID_REG_L 0x0F16

static struct imgsensor_i2c_reg stream_on[] = {
	{ 0x0100, 0x01, 0x00 },
};

static struct imgsensor_i2c_reg stream_off[] = {
	{ 0x0100, 0x00, 0x00 },
};

static struct imgsensor_i2c_reg init_setting[] = {
	{ 0x0103, 0x01, 0x00 },
	{ 0x0102, 0x00, 0x00 },
	{ 0x0301, 0x48, 0x00 },
	{ 0x0302, 0x31, 0x00 },
	{ 0x0303, 0x04, 0x00 },
	{ 0x0305, 0xc2, 0x00 },
	{ 0x0306, 0x00, 0x00 },
	{ 0x0320, 0x02, 0x00 },
	{ 0x0323, 0x04, 0x00 },
	{ 0x0326, 0xd8, 0x00 },
	{ 0x0327, 0x0b, 0x00 },
	{ 0x0329, 0x01, 0x00 },
	{ 0x0343, 0x04, 0x00 },
	{ 0x0344, 0x01, 0x00 },
	{ 0x0345, 0x2c, 0x00 },
	{ 0x0346, 0xc0, 0x00 },
	{ 0x034a, 0x07, 0x00 },
	{ 0x300e, 0x22, 0x00 },
	{ 0x3012, 0x41, 0x00 },
	{ 0x3016, 0xd2, 0x00 },
	{ 0x3018, 0x70, 0x00 },
	{ 0x301e, 0x98, 0x00 },
	{ 0x3025, 0x03, 0x00 },
	{ 0x3026, 0x10, 0x00 },
	{ 0x3027, 0x08, 0x00 },
	{ 0x3102, 0x00, 0x00 },
	{ 0x3400, 0x04, 0x00 },
	{ 0x3406, 0x04, 0x00 },
	{ 0x3408, 0x04, 0x00 },
	{ 0x3421, 0x09, 0x00 },
	{ 0x3422, 0x20, 0x00 },
	{ 0x3423, 0x55, 0x00 },
	{ 0x3424, 0x40, 0x00 },
	{ 0x3425, 0x14, 0x00 },
	{ 0x3426, 0x04, 0x00 },
	{ 0x3504, 0x08, 0x00 },
	{ 0x3508, 0x01, 0x00 },
	{ 0x3509, 0x00, 0x00 },
	{ 0x350a, 0x01, 0x00 },
	{ 0x350b, 0x00, 0x00 },
	{ 0x350c, 0x00, 0x00 },
	{ 0x3548, 0x01, 0x00 },
	{ 0x3549, 0x00, 0x00 },
	{ 0x354a, 0x01, 0x00 },
	{ 0x354b, 0x00, 0x00 },
	{ 0x354c, 0x00, 0x00 },
	{ 0x3600, 0xff, 0x00 },
	{ 0x3602, 0x42, 0x00 },
	{ 0x3603, 0x7b, 0x00 },
	{ 0x3608, 0x9b, 0x00 },
	{ 0x360a, 0x69, 0x00 },
	{ 0x360b, 0x53, 0x00 },
	{ 0x3618, 0xc0, 0x00 },
	{ 0x361a, 0x8b, 0x00 },
	{ 0x361d, 0x20, 0x00 },
	{ 0x361e, 0x30, 0x00 },
	{ 0x361f, 0x01, 0x00 },
	{ 0x3620, 0x89, 0x00 },
	{ 0x3624, 0x8f, 0x00 },
	{ 0x3629, 0x09, 0x00 },
	{ 0x362e, 0x50, 0x00 },
	{ 0x3631, 0xe2, 0x00 },
	{ 0x3632, 0xe2, 0x00 },
	{ 0x3634, 0x10, 0x00 },
	{ 0x3635, 0x10, 0x00 },
	{ 0x3636, 0x10, 0x00 },
	{ 0x3639, 0xa6, 0x00 },
	{ 0x363a, 0xaa, 0x00 },
	{ 0x363b, 0x0c, 0x00 },
	{ 0x363c, 0x16, 0x00 },
	{ 0x363d, 0x29, 0x00 },
	{ 0x363e, 0x4f, 0x00 },
	{ 0x3642, 0xa8, 0x00 },
	{ 0x3652, 0x00, 0x00 },
	{ 0x3653, 0x00, 0x00 },
	{ 0x3654, 0x8a, 0x00 },
	{ 0x3656, 0x0c, 0x00 },
	{ 0x3657, 0x8e, 0x00 },
	{ 0x3660, 0x80, 0x00 },
	{ 0x3663, 0x00, 0x00 },
	{ 0x3664, 0x00, 0x00 },
	{ 0x3668, 0x05, 0x00 },
	{ 0x3669, 0x05, 0x00 },
	{ 0x370d, 0x10, 0x00 },
	{ 0x370e, 0x05, 0x00 },
	{ 0x370f, 0x10, 0x00 },
	{ 0x3711, 0x01, 0x00 },
	{ 0x3712, 0x09, 0x00 },
	{ 0x3713, 0x40, 0x00 },
	{ 0x3714, 0xe4, 0x00 },
	{ 0x3716, 0x04, 0x00 },
	{ 0x3717, 0x01, 0x00 },
	{ 0x3718, 0x02, 0x00 },
	{ 0x3719, 0x01, 0x00 },
	{ 0x371a, 0x02, 0x00 },
	{ 0x371b, 0x02, 0x00 },
	{ 0x371c, 0x01, 0x00 },
	{ 0x371d, 0x02, 0x00 },
	{ 0x371e, 0x12, 0x00 },
	{ 0x371f, 0x02, 0x00 },
	{ 0x3720, 0x14, 0x00 },
	{ 0x3721, 0x12, 0x00 },
	{ 0x3722, 0x44, 0x00 },
	{ 0x3723, 0x60, 0x00 },
	{ 0x372f, 0x34, 0x00 },
	{ 0x3726, 0x21, 0x00 },
	{ 0x37d0, 0x02, 0x00 },
	{ 0x37d1, 0x10, 0x00 },
	{ 0x37db, 0x08, 0x00 },
	{ 0x3808, 0x12, 0x00 },
	{ 0x3809, 0x30, 0x00 },
	{ 0x380a, 0x0d, 0x00 },
	{ 0x380b, 0xa8, 0x00 },
	{ 0x380c, 0x03, 0x00 },
	{ 0x380d, 0x52, 0x00 },
	{ 0x380e, 0x0f, 0x00 },
	{ 0x380f, 0x51, 0x00 },
	{ 0x3814, 0x11, 0x00 },
	{ 0x3815, 0x11, 0x00 },
	{ 0x3820, 0x00, 0x00 },
	{ 0x3821, 0x06, 0x00 },
	{ 0x3822, 0x00, 0x00 },
	{ 0x3823, 0x04, 0x00 },
	{ 0x3837, 0x10, 0x00 },
	{ 0x383c, 0x34, 0x00 },
	{ 0x383d, 0xff, 0x00 },
	{ 0x383e, 0x0d, 0x00 },
	{ 0x383f, 0x22, 0x00 },
	{ 0x3857, 0x00, 0x00 },
	{ 0x388f, 0x00, 0x00 },
	{ 0x3890, 0x00, 0x00 },
	{ 0x3891, 0x00, 0x00 },
	{ 0x3d81, 0x10, 0x00 },
	{ 0x3d83, 0x0c, 0x00 },
	{ 0x3d84, 0x00, 0x00 },
	{ 0x3d85, 0x1b, 0x00 },
	{ 0x3d88, 0x00, 0x00 },
	{ 0x3d89, 0x00, 0x00 },
	{ 0x3d8a, 0x00, 0x00 },
	{ 0x3d8b, 0x01, 0x00 },
	{ 0x3d8c, 0x77, 0x00 },
	{ 0x3d8d, 0xa0, 0x00 },
	{ 0x3f00, 0x02, 0x00 },
	{ 0x3f0c, 0x07, 0x00 },
	{ 0x3f0d, 0x2f, 0x00 },
	{ 0x4012, 0x0d, 0x00 },
	{ 0x4015, 0x04, 0x00 },
	{ 0x4016, 0x1b, 0x00 },
	{ 0x4017, 0x04, 0x00 },
	{ 0x4018, 0x0b, 0x00 },
	{ 0x401b, 0x1f, 0x00 },
	{ 0x401e, 0x01, 0x00 },
	{ 0x401f, 0x38, 0x00 },
	{ 0x4500, 0x20, 0x00 },
	{ 0x4501, 0x6a, 0x00 },
	{ 0x4502, 0xb4, 0x00 },
	{ 0x4586, 0x00, 0x00 },
	{ 0x4588, 0x02, 0x00 },
	{ 0x4640, 0x01, 0x00 },
	{ 0x4641, 0x04, 0x00 },
	{ 0x4643, 0x00, 0x00 },
	{ 0x4645, 0x03, 0x00 },
	{ 0x4806, 0x40, 0x00 },
	{ 0x480e, 0x00, 0x00 },
	{ 0x4815, 0x2b, 0x00 },
	{ 0x481b, 0x3c, 0x00 },
	{ 0x481f, 0x3c, 0x00 },
	{ 0x4833, 0x18, 0x00 },
	{ 0x4837, 0x08, 0x00 },
	{ 0x484b, 0x07, 0x00 },
	{ 0x4850, 0x41, 0x00 },
	{ 0x4860, 0x00, 0x00 },
	{ 0x4861, 0xec, 0x00 },
	{ 0x4864, 0x00, 0x00 },
	{ 0x4883, 0x00, 0x00 },
	{ 0x4888, 0x10, 0x00 },
	{ 0x4a00, 0x10, 0x00 },
	{ 0x4e00, 0x00, 0x00 },
	{ 0x4e01, 0x04, 0x00 },
	{ 0x4e02, 0x01, 0x00 },
	{ 0x4e03, 0x00, 0x00 },
	{ 0x4e04, 0x08, 0x00 },
	{ 0x4e05, 0x04, 0x00 },
	{ 0x4e06, 0x00, 0x00 },
	{ 0x4e07, 0x13, 0x00 },
	{ 0x4e08, 0x01, 0x00 },
	{ 0x4e09, 0x00, 0x00 },
	{ 0x4e0a, 0x15, 0x00 },
	{ 0x4e0b, 0x0e, 0x00 },
	{ 0x4e0c, 0x00, 0x00 },
	{ 0x4e0d, 0x17, 0x00 },
	{ 0x4e0e, 0x07, 0x00 },
	{ 0x4e0f, 0x00, 0x00 },
	{ 0x4e10, 0x19, 0x00 },
	{ 0x4e11, 0x06, 0x00 },
	{ 0x4e12, 0x00, 0x00 },
	{ 0x4e13, 0x1b, 0x00 },
	{ 0x4e14, 0x08, 0x00 },
	{ 0x4e15, 0x00, 0x00 },
	{ 0x4e16, 0x1f, 0x00 },
	{ 0x4e17, 0x08, 0x00 },
	{ 0x4e18, 0x00, 0x00 },
	{ 0x4e19, 0x21, 0x00 },
	{ 0x4e1a, 0x0e, 0x00 },
	{ 0x4e1b, 0x00, 0x00 },
	{ 0x4e1c, 0x2d, 0x00 },
	{ 0x4e1d, 0x30, 0x00 },
	{ 0x4e1e, 0x00, 0x00 },
	{ 0x4e1f, 0x6a, 0x00 },
	{ 0x4e20, 0x05, 0x00 },
	{ 0x4e21, 0x00, 0x00 },
	{ 0x4e22, 0x6c, 0x00 },
	{ 0x4e23, 0x05, 0x00 },
	{ 0x4e24, 0x00, 0x00 },
	{ 0x4e25, 0x6e, 0x00 },
	{ 0x4e26, 0x39, 0x00 },
	{ 0x4e27, 0x00, 0x00 },
	{ 0x4e28, 0x7a, 0x00 },
	{ 0x4e29, 0x6d, 0x00 },
	{ 0x4e2a, 0x00, 0x00 },
	{ 0x4e2b, 0x00, 0x00 },
	{ 0x4e2c, 0x00, 0x00 },
	{ 0x4e2d, 0x00, 0x00 },
	{ 0x4e2e, 0x00, 0x00 },
	{ 0x4e2f, 0x00, 0x00 },
	{ 0x4e30, 0x00, 0x00 },
	{ 0x4e31, 0x00, 0x00 },
	{ 0x4e32, 0x00, 0x00 },
	{ 0x4e33, 0x00, 0x00 },
	{ 0x4e34, 0x00, 0x00 },
	{ 0x4e35, 0x00, 0x00 },
	{ 0x4e36, 0x00, 0x00 },
	{ 0x4e37, 0x00, 0x00 },
	{ 0x4e38, 0x00, 0x00 },
	{ 0x4e39, 0x00, 0x00 },
	{ 0x4e3a, 0x00, 0x00 },
	{ 0x4e3b, 0x00, 0x00 },
	{ 0x4e3c, 0x00, 0x00 },
	{ 0x4e3d, 0x00, 0x00 },
	{ 0x4e3e, 0x00, 0x00 },
	{ 0x4e3f, 0x00, 0x00 },
	{ 0x4e40, 0x00, 0x00 },
	{ 0x4e41, 0x00, 0x00 },
	{ 0x4e42, 0x00, 0x00 },
	{ 0x4e43, 0x00, 0x00 },
	{ 0x4e44, 0x00, 0x00 },
	{ 0x4e45, 0x00, 0x00 },
	{ 0x4e46, 0x00, 0x00 },
	{ 0x4e47, 0x00, 0x00 },
	{ 0x4e48, 0x00, 0x00 },
	{ 0x4e49, 0x00, 0x00 },
	{ 0x4e4a, 0x00, 0x00 },
	{ 0x4e4b, 0x00, 0x00 },
	{ 0x4e4c, 0x00, 0x00 },
	{ 0x4e4d, 0x00, 0x00 },
	{ 0x4e4e, 0x00, 0x00 },
	{ 0x4e4f, 0x00, 0x00 },
	{ 0x4e50, 0x00, 0x00 },
	{ 0x4e51, 0x00, 0x00 },
	{ 0x4e52, 0x00, 0x00 },
	{ 0x4e53, 0x00, 0x00 },
	{ 0x4e54, 0x00, 0x00 },
	{ 0x4e55, 0x00, 0x00 },
	{ 0x4e56, 0x00, 0x00 },
	{ 0x4e57, 0x00, 0x00 },
	{ 0x4e58, 0x00, 0x00 },
	{ 0x4e59, 0x00, 0x00 },
	{ 0x4e5a, 0x00, 0x00 },
	{ 0x4e5b, 0x00, 0x00 },
	{ 0x4e5c, 0x00, 0x00 },
	{ 0x4e5d, 0x00, 0x00 },
	{ 0x4e5e, 0x00, 0x00 },
	{ 0x4e5f, 0x00, 0x00 },
	{ 0x4e60, 0x00, 0x00 },
	{ 0x4e61, 0x00, 0x00 },
	{ 0x4e62, 0x00, 0x00 },
	{ 0x4e63, 0x00, 0x00 },
	{ 0x4e64, 0x00, 0x00 },
	{ 0x4e65, 0x00, 0x00 },
	{ 0x4e66, 0x00, 0x00 },
	{ 0x4e67, 0x00, 0x00 },
	{ 0x4e68, 0x00, 0x00 },
	{ 0x4e69, 0x00, 0x00 },
	{ 0x4e6a, 0x00, 0x00 },
	{ 0x4e6b, 0x00, 0x00 },
	{ 0x4e6c, 0x00, 0x00 },
	{ 0x4e6d, 0x00, 0x00 },
	{ 0x4e6e, 0x00, 0x00 },
	{ 0x4e6f, 0x00, 0x00 },
	{ 0x4e70, 0x00, 0x00 },
	{ 0x4e71, 0x00, 0x00 },
	{ 0x4e72, 0x00, 0x00 },
	{ 0x4e73, 0x00, 0x00 },
	{ 0x4e74, 0x00, 0x00 },
	{ 0x4e75, 0x00, 0x00 },
	{ 0x4e76, 0x00, 0x00 },
	{ 0x4e77, 0x00, 0x00 },
	{ 0x4e78, 0x1c, 0x00 },
	{ 0x4e79, 0x1e, 0x00 },
	{ 0x4e7a, 0x00, 0x00 },
	{ 0x4e7b, 0x00, 0x00 },
	{ 0x4e7c, 0x2c, 0x00 },
	{ 0x4e7d, 0x2f, 0x00 },
	{ 0x4e7e, 0x79, 0x00 },
	{ 0x4e7f, 0x7b, 0x00 },
	{ 0x4e80, 0x0a, 0x00 },
	{ 0x4e81, 0x31, 0x00 },
	{ 0x4e82, 0x66, 0x00 },
	{ 0x4e83, 0x81, 0x00 },
	{ 0x4e84, 0x03, 0x00 },
	{ 0x4e85, 0x40, 0x00 },
	{ 0x4e86, 0x02, 0x00 },
	{ 0x4e87, 0x09, 0x00 },
	{ 0x4e88, 0x43, 0x00 },
	{ 0x4e89, 0x53, 0x00 },
	{ 0x4e8a, 0x32, 0x00 },
	{ 0x4e8b, 0x67, 0x00 },
	{ 0x4e8c, 0x05, 0x00 },
	{ 0x4e8d, 0x83, 0x00 },
	{ 0x4e8e, 0x00, 0x00 },
	{ 0x4e8f, 0x00, 0x00 },
	{ 0x4e90, 0x00, 0x00 },
	{ 0x4e91, 0x00, 0x00 },
	{ 0x4e92, 0x00, 0x00 },
	{ 0x4e93, 0x00, 0x00 },
	{ 0x4e94, 0x00, 0x00 },
	{ 0x4e95, 0x00, 0x00 },
	{ 0x4e96, 0x00, 0x00 },
	{ 0x4e97, 0x00, 0x00 },
	{ 0x4e98, 0x00, 0x00 },
	{ 0x4e99, 0x00, 0x00 },
	{ 0x4e9a, 0x00, 0x00 },
	{ 0x4e9b, 0x00, 0x00 },
	{ 0x4e9c, 0x00, 0x00 },
	{ 0x4e9d, 0x00, 0x00 },
	{ 0x4e9e, 0x00, 0x00 },
	{ 0x4e9f, 0x00, 0x00 },
	{ 0x4ea0, 0x00, 0x00 },
	{ 0x4ea1, 0x00, 0x00 },
	{ 0x4ea2, 0x00, 0x00 },
	{ 0x4ea3, 0x00, 0x00 },
	{ 0x4ea4, 0x00, 0x00 },
	{ 0x4ea5, 0x00, 0x00 },
	{ 0x4ea6, 0x1e, 0x00 },
	{ 0x4ea7, 0x20, 0x00 },
	{ 0x4ea8, 0x32, 0x00 },
	{ 0x4ea9, 0x6d, 0x00 },
	{ 0x4eaa, 0x18, 0x00 },
	{ 0x4eab, 0x7f, 0x00 },
	{ 0x4eac, 0x00, 0x00 },
	{ 0x4ead, 0x00, 0x00 },
	{ 0x4eae, 0x7c, 0x00 },
	{ 0x4eaf, 0x07, 0x00 },
	{ 0x4eb0, 0x7c, 0x00 },
	{ 0x4eb1, 0x07, 0x00 },
	{ 0x4eb2, 0x07, 0x00 },
	{ 0x4eb3, 0x1c, 0x00 },
	{ 0x4eb4, 0x07, 0x00 },
	{ 0x4eb5, 0x1c, 0x00 },
	{ 0x4eb6, 0x07, 0x00 },
	{ 0x4eb7, 0x1c, 0x00 },
	{ 0x4eb8, 0x07, 0x00 },
	{ 0x4eb9, 0x1c, 0x00 },
	{ 0x4eba, 0x07, 0x00 },
	{ 0x4ebb, 0x14, 0x00 },
	{ 0x4ebc, 0x07, 0x00 },
	{ 0x4ebd, 0x1c, 0x00 },
	{ 0x4ebe, 0x07, 0x00 },
	{ 0x4ebf, 0x1c, 0x00 },
	{ 0x4ec0, 0x07, 0x00 },
	{ 0x4ec1, 0x1c, 0x00 },
	{ 0x4ec2, 0x07, 0x00 },
	{ 0x4ec3, 0x1c, 0x00 },
	{ 0x4ec4, 0x2c, 0x00 },
	{ 0x4ec5, 0x2f, 0x00 },
	{ 0x4ec6, 0x79, 0x00 },
	{ 0x4ec7, 0x7b, 0x00 },
	{ 0x4ec8, 0x7c, 0x00 },
	{ 0x4ec9, 0x07, 0x00 },
	{ 0x4eca, 0x7c, 0x00 },
	{ 0x4ecb, 0x07, 0x00 },
	{ 0x4ecc, 0x00, 0x00 },
	{ 0x4ecd, 0x00, 0x00 },
	{ 0x4ece, 0x07, 0x00 },
	{ 0x4ecf, 0x31, 0x00 },
	{ 0x4ed0, 0x69, 0x00 },
	{ 0x4ed1, 0x7f, 0x00 },
	{ 0x4ed2, 0x67, 0x00 },
	{ 0x4ed3, 0x00, 0x00 },
	{ 0x4ed4, 0x00, 0x00 },
	{ 0x4ed5, 0x00, 0x00 },
	{ 0x4ed6, 0x7c, 0x00 },
	{ 0x4ed7, 0x07, 0x00 },
	{ 0x4ed8, 0x7c, 0x00 },
	{ 0x4ed9, 0x07, 0x00 },
	{ 0x4eda, 0x33, 0x00 },
	{ 0x4edb, 0x7f, 0x00 },
	{ 0x4edc, 0x00, 0x00 },
	{ 0x4edd, 0x16, 0x00 },
	{ 0x4ede, 0x00, 0x00 },
	{ 0x4edf, 0x00, 0x00 },
	{ 0x4ee0, 0x32, 0x00 },
	{ 0x4ee1, 0x70, 0x00 },
	{ 0x4ee2, 0x01, 0x00 },
	{ 0x4ee3, 0x30, 0x00 },
	{ 0x4ee4, 0x22, 0x00 },
	{ 0x4ee5, 0x28, 0x00 },
	{ 0x4ee6, 0x6f, 0x00 },
	{ 0x4ee7, 0x75, 0x00 },
	{ 0x4ee8, 0x00, 0x00 },
	{ 0x4ee9, 0x00, 0x00 },
	{ 0x4eea, 0x30, 0x00 },
	{ 0x4eeb, 0x7f, 0x00 },
	{ 0x4eec, 0x00, 0x00 },
	{ 0x4eed, 0x00, 0x00 },
	{ 0x4eee, 0x00, 0x00 },
	{ 0x4eef, 0x00, 0x00 },
	{ 0x4ef0, 0x69, 0x00 },
	{ 0x4ef1, 0x7f, 0x00 },
	{ 0x4ef2, 0x07, 0x00 },
	{ 0x4ef3, 0x30, 0x00 },
	{ 0x4ef4, 0x32, 0x00 },
	{ 0x4ef5, 0x09, 0x00 },
	{ 0x4ef6, 0x7d, 0x00 },
	{ 0x4ef7, 0x65, 0x00 },
	{ 0x4ef8, 0x00, 0x00 },
	{ 0x4ef9, 0x00, 0x00 },
	{ 0x4efa, 0x00, 0x00 },
	{ 0x4efb, 0x00, 0x00 },
	{ 0x4efc, 0x7f, 0x00 },
	{ 0x4efd, 0x09, 0x00 },
	{ 0x4efe, 0x7f, 0x00 },
	{ 0x4eff, 0x09, 0x00 },
	{ 0x4f00, 0x1e, 0x00 },
	{ 0x4f01, 0x7c, 0x00 },
	{ 0x4f02, 0x7f, 0x00 },
	{ 0x4f03, 0x09, 0x00 },
	{ 0x4f04, 0x7f, 0x00 },
	{ 0x4f05, 0x0b, 0x00 },
	{ 0x4f06, 0x7c, 0x00 },
	{ 0x4f07, 0x02, 0x00 },
	{ 0x4f08, 0x7c, 0x00 },
	{ 0x4f09, 0x02, 0x00 },
	{ 0x4f0a, 0x32, 0x00 },
	{ 0x4f0b, 0x64, 0x00 },
	{ 0x4f0c, 0x32, 0x00 },
	{ 0x4f0d, 0x64, 0x00 },
	{ 0x4f0e, 0x32, 0x00 },
	{ 0x4f0f, 0x64, 0x00 },
	{ 0x4f10, 0x32, 0x00 },
	{ 0x4f11, 0x64, 0x00 },
	{ 0x4f12, 0x31, 0x00 },
	{ 0x4f13, 0x4f, 0x00 },
	{ 0x4f14, 0x83, 0x00 },
	{ 0x4f15, 0x84, 0x00 },
	{ 0x4f16, 0x63, 0x00 },
	{ 0x4f17, 0x64, 0x00 },
	{ 0x4f18, 0x83, 0x00 },
	{ 0x4f19, 0x84, 0x00 },
	{ 0x4f1a, 0x31, 0x00 },
	{ 0x4f1b, 0x32, 0x00 },
	{ 0x4f1c, 0x7b, 0x00 },
	{ 0x4f1d, 0x7c, 0x00 },
	{ 0x4f1e, 0x2f, 0x00 },
	{ 0x4f1f, 0x30, 0x00 },
	{ 0x4f20, 0x30, 0x00 },
	{ 0x4f21, 0x69, 0x00 },
	{ 0x4d06, 0x08, 0x00 },
	{ 0x5000, 0x01, 0x00 },
	{ 0x5001, 0x40, 0x00 },
	{ 0x5002, 0x53, 0x00 },
	{ 0x5003, 0x42, 0x00 },
	{ 0x5005, 0x00, 0x00 },
	{ 0x5038, 0x00, 0x00 },
	{ 0x5081, 0x00, 0x00 },
	{ 0x5180, 0x00, 0x00 },
	{ 0x5181, 0x10, 0x00 },
	{ 0x5182, 0x07, 0x00 },
	{ 0x5183, 0x8f, 0x00 },
	{ 0x5820, 0xc5, 0x00 },
	{ 0x5854, 0x00, 0x00 },
	{ 0x58cb, 0x03, 0x00 },
	{ 0x5bd0, 0x15, 0x00 },
	{ 0x5bd1, 0x02, 0x00 },
	{ 0x5c0e, 0x11, 0x00 },
	{ 0x5c11, 0x00, 0x00 },
	{ 0x5c16, 0x02, 0x00 },
	{ 0x5c17, 0x01, 0x00 },
	{ 0x5c1a, 0x04, 0x00 },
	{ 0x5c1b, 0x03, 0x00 },
	{ 0x5c21, 0x10, 0x00 },
	{ 0x5c22, 0x10, 0x00 },
	{ 0x5c23, 0x04, 0x00 },
	{ 0x5c24, 0x0c, 0x00 },
	{ 0x5c25, 0x04, 0x00 },
	{ 0x5c26, 0x0c, 0x00 },
	{ 0x5c27, 0x04, 0x00 },
	{ 0x5c28, 0x0c, 0x00 },
	{ 0x5c29, 0x04, 0x00 },
	{ 0x5c2a, 0x0c, 0x00 },
	{ 0x5c2b, 0x01, 0x00 },
	{ 0x5c2c, 0x01, 0x00 },
	{ 0x5c2e, 0x08, 0x00 },
	{ 0x5c30, 0x04, 0x00 },
	{ 0x5c35, 0x03, 0x00 },
	{ 0x5c36, 0x03, 0x00 },
	{ 0x5c37, 0x03, 0x00 },
	{ 0x5c38, 0x03, 0x00 },
	{ 0x5d00, 0xff, 0x00 },
	{ 0x5d01, 0x0f, 0x00 },
	{ 0x5d02, 0x80, 0x00 },
	{ 0x5d03, 0x44, 0x00 },
	{ 0x5d05, 0xfc, 0x00 },
	{ 0x5d06, 0x0b, 0x00 },
	{ 0x5d08, 0x10, 0x00 },
	{ 0x5d09, 0x10, 0x00 },
	{ 0x5d0a, 0x04, 0x00 },
	{ 0x5d0b, 0x0c, 0x00 },
	{ 0x5d0c, 0x04, 0x00 },
	{ 0x5d0d, 0x0c, 0x00 },
	{ 0x5d0e, 0x04, 0x00 },
	{ 0x5d0f, 0x0c, 0x00 },
	{ 0x5d10, 0x04, 0x00 },
	{ 0x5d11, 0x0c, 0x00 },
	{ 0x5d12, 0x01, 0x00 },
	{ 0x5d13, 0x01, 0x00 },
	{ 0x5d15, 0x10, 0x00 },
	{ 0x5d16, 0x10, 0x00 },
	{ 0x5d17, 0x10, 0x00 },
	{ 0x5d18, 0x10, 0x00 },
	{ 0x5d1a, 0x10, 0x00 },
	{ 0x5d1b, 0x10, 0x00 },
	{ 0x5d1c, 0x10, 0x00 },
	{ 0x5d1d, 0x10, 0x00 },
	{ 0x5d1e, 0x04, 0x00 },
	{ 0x5d1f, 0x04, 0x00 },
	{ 0x5d20, 0x04, 0x00 },
	{ 0x5d27, 0x64, 0x00 },
	{ 0x5d28, 0xc8, 0x00 },
	{ 0x5d29, 0x96, 0x00 },
	{ 0x5d2a, 0xff, 0x00 },
	{ 0x5d2b, 0xc8, 0x00 },
	{ 0x5d2c, 0xff, 0x00 },
	{ 0x5d2d, 0x04, 0x00 },
	{ 0x5d34, 0x00, 0x00 },
	{ 0x5d35, 0x08, 0x00 },
	{ 0x5d36, 0x00, 0x00 },
	{ 0x5d37, 0x04, 0x00 },
	{ 0x5d4a, 0x00, 0x00 },
	{ 0x5d4c, 0x00, 0x00 },
	{ 0x0305, 0x68, 0x00 }, // 1440Mbps
	{ 0x4837, 0x0b, 0x00 },
};

static struct imgsensor_i2c_reg preview_setting[] = {
	{ 0x0305, 0x80, 0x00 },
	{ 0x0307, 0x01, 0x00 },
	{ 0x4837, 0x14, 0x00 },
	{ 0x0329, 0x01, 0x00 },
	{ 0x0344, 0x01, 0x00 },
	{ 0x0345, 0x2c, 0x00 },
	{ 0x034a, 0x07, 0x00 },
	{ 0x3608, 0x75, 0x00 },
	{ 0x360a, 0x69, 0x00 },
	{ 0x361a, 0x8b, 0x00 },
	{ 0x361e, 0x30, 0x00 },
	{ 0x3639, 0xa6, 0x00 },
	{ 0x363a, 0xaa, 0x00 },
	{ 0x3642, 0xa8, 0x00 },
	{ 0x3654, 0x8a, 0x00 },
	{ 0x3656, 0x0c, 0x00 },
	{ 0x3663, 0x01, 0x00 },
	{ 0x370e, 0xa5, 0x00 },
	{ 0x3712, 0x59, 0x00 },
	{ 0x3713, 0x40, 0x00 },
	{ 0x3714, 0xe4, 0x00 },
	{ 0x37d0, 0x02, 0x00 },
	{ 0x37d1, 0x10, 0x00 },
	{ 0x37db, 0x04, 0x00 },
	{ 0x3808, 0x09, 0x00 },
	{ 0x3809, 0x00, 0x00 },
	{ 0x380a, 0x06, 0x00 },
	{ 0x380b, 0xc0, 0x00 },
	{ 0x380c, 0x05, 0x00 },
	{ 0x380d, 0x78, 0x00 },
	{ 0x380e, 0x09, 0x00 },
	{ 0x380f, 0x16, 0x00 },
	{ 0x3814, 0x11, 0x00 },
	{ 0x3815, 0x22, 0x00 },
	{ 0x3820, 0x01, 0x00 },
	{ 0x3821, 0x06, 0x00 },
	{ 0x3822, 0x01, 0x00 },
	{ 0x383c, 0x22, 0x00 },
	{ 0x383f, 0x33, 0x00 },
	{ 0x4015, 0x02, 0x00 },
	{ 0x4016, 0x0d, 0x00 },
	{ 0x4017, 0x00, 0x00 },
	{ 0x4018, 0x07, 0x00 },
	{ 0x401b, 0x1f, 0x00 },
	{ 0x401f, 0x38, 0x00 },
	{ 0x4500, 0x20, 0x00 },
	{ 0x4501, 0x6f, 0x00 },
	{ 0x4502, 0xe4, 0x00 },
	{ 0x4e05, 0x04, 0x00 },
	{ 0x4e11, 0x06, 0x00 },
	{ 0x4e1d, 0x30, 0x00 },
	{ 0x4e26, 0x39, 0x00 },
	{ 0x4e29, 0x6d, 0x00 },
	{ 0x5000, 0x29, 0x00 },
	{ 0x5001, 0xc2, 0x00 },
	{ 0x5003, 0xc2, 0x00 },
	{ 0x5820, 0xc0, 0x00 },
	{ 0x5854, 0x01, 0x00 },
	{ 0x5bd0, 0x19, 0x00 },
	{ 0x5c0e, 0x11, 0x00 },
	{ 0x5c11, 0x01, 0x00 },
	{ 0x5c16, 0x02, 0x00 },
	{ 0x5c17, 0x00, 0x00 },
	{ 0x5c1a, 0x00, 0x00 },
	{ 0x5c1b, 0x00, 0x00 },
	{ 0x5c21, 0x10, 0x00 },
	{ 0x5c22, 0x08, 0x00 },
	{ 0x5c23, 0x04, 0x00 },
	{ 0x5c24, 0x0c, 0x00 },
	{ 0x5c25, 0x04, 0x00 },
	{ 0x5c26, 0x0c, 0x00 },
	{ 0x5c27, 0x02, 0x00 },
	{ 0x5c28, 0x06, 0x00 },
	{ 0x5c29, 0x02, 0x00 },
	{ 0x5c2a, 0x06, 0x00 },
	{ 0x5c2b, 0x01, 0x00 },
	{ 0x5c2c, 0x00, 0x00 },
	{ 0x5d01, 0x07, 0x00 },
	{ 0x5d08, 0x08, 0x00 },
	{ 0x5d09, 0x08, 0x00 },
	{ 0x5d0a, 0x02, 0x00 },
	{ 0x5d0b, 0x06, 0x00 },
	{ 0x5d0c, 0x02, 0x00 },
	{ 0x5d0d, 0x06, 0x00 },
	{ 0x5d0e, 0x02, 0x00 },
	{ 0x5d0f, 0x06, 0x00 },
	{ 0x5d10, 0x02, 0x00 },
	{ 0x5d11, 0x06, 0x00 },
	{ 0x5d12, 0x00, 0x00 },
	{ 0x5d13, 0x00, 0x00 },
	{ 0x3500, 0x00, 0x00 },
	{ 0x3501, 0x09, 0x00 },
	{ 0x3502, 0x44, 0x00 },
	{ 0x3508, 0x01, 0x00 },
	{ 0x3509, 0x00, 0x00 },
};

static struct imgsensor_i2c_reg_table dump_setting[] = {
	{ 0x0934, 0x0000, IMGSENSOR_I2C_WORD_DATA, IMGSENSOR_I2C_READ, 0 },
	{ 0x0a00, 0x0000, IMGSENSOR_I2C_WORD_DATA, IMGSENSOR_I2C_READ, 0 },
	{ 0x0100, 0x01,   IMGSENSOR_I2C_BYTE_DATA, IMGSENSOR_I2C_READ, 0 },
};

static struct imgsensor_info_t imgsensor_info = {
	.sensor_id_reg = 0x300B,
	.sensor_id = OV16A1Q_OFILM_SENSOR_ID,
	.checksum_value = 0xdf4593fd,


	.pre = {
		.pclk = 100000000,	/* record different mode's pclk */
		.linelength = 1400,	/* record different mode's linelength */
		.framelength = 2326, /* record different mode's framelength */
		.startx = 0, /* record different mode's startx of grabwindow */
		.starty = 0, /* record different mode's starty of grabwindow */

		/* 2096, //record different mode's width of grabwindow */
		.grabwindow_width = 2304,
		/* 1552, //record different mode's height of grabwindow */
		.grabwindow_height = 1728,

		/* following for MIPIDataLowPwr2HighSpeedSettleDelayCount
		 * by different scenario
		 */
		.mipi_data_lp2hs_settle_dc = 85,
		/* following for GetDefaultFramerateByScenario() */
		.max_framerate = 307,
		.mipi_pixel_rate = 307200000,
	},
	.cap = {
		.pclk = 100000000,	/* record different mode's pclk */
		.linelength = 1400,	/* record different mode's linelength */
		.framelength = 2326, /* record different mode's framelength */
		.startx = 0, /* record different mode's startx of grabwindow */
		.starty = 0, /* record different mode's starty of grabwindow */

		/* 2096, //record different mode's width of grabwindow */
		.grabwindow_width = 2304,
		/* 1552, //record different mode's height of grabwindow */
		.grabwindow_height = 1728,

		/* following for MIPIDataLowPwr2HighSpeedSettleDelayCount
		 * by different scenario
		 */
		.mipi_data_lp2hs_settle_dc = 85,
		/* following for GetDefaultFramerateByScenario() */
		.max_framerate = 307,
		.mipi_pixel_rate = 307200000,
	},
	.normal_video = {
		.pclk = 100000000,	/* record different mode's pclk */
		.linelength = 1400,	/* record different mode's linelength */
		.framelength = 2326, /* record different mode's framelength */
		.startx = 0, /* record different mode's startx of grabwindow */
		.starty = 0, /* record different mode's starty of grabwindow */

		/* 2096, //record different mode's width of grabwindow */
		.grabwindow_width = 2304,
		/* 1552, //record different mode's height of grabwindow */
		.grabwindow_height = 1728,

		/* following for MIPIDataLowPwr2HighSpeedSettleDelayCount
		 * by different scenario
		 */
		.mipi_data_lp2hs_settle_dc = 85,
		/* following for GetDefaultFramerateByScenario() */
		.max_framerate = 307,
		.mipi_pixel_rate = 307200000,
	},
	.init_setting = {
		.setting = init_setting,
		.size = IMGSENSOR_ARRAY_SIZE(init_setting),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.pre_setting = {
		.setting = preview_setting,
		.size = IMGSENSOR_ARRAY_SIZE(preview_setting),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.cap_setting = {
		.setting = preview_setting,
		.size = IMGSENSOR_ARRAY_SIZE(preview_setting),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.normal_video_setting = {
		.setting = preview_setting,
		.size = IMGSENSOR_ARRAY_SIZE(preview_setting),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.streamon_setting = {
		.setting = stream_on,
		.size = IMGSENSOR_ARRAY_SIZE(stream_on),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.streamoff_setting = {
		.setting = stream_off,
		.size = IMGSENSOR_ARRAY_SIZE(stream_off),
		.addr_type = IMGSENSOR_I2C_WORD_ADDR,
		.data_type = IMGSENSOR_I2C_BYTE_DATA,
		.delay = 0,
	},
	.dump_info = {
		.setting = dump_setting,
		.size = IMGSENSOR_ARRAY_SIZE(dump_setting),
	},

	.margin = 8,
	.min_shutter = 8,
	.max_frame_length = 0xffff,
	.ae_shut_delay_frame = 0,
	.ae_sensor_gain_delay_frame = 0,
	.ae_ispGain_delay_frame = 2,
	.ihdr_support = 0,
	.ihdr_le_firstline = 0,
	.sensor_mode_num = 3,

	.cap_delay_frame = 3,
	.pre_delay_frame = 3,
	.video_delay_frame = 3,
	.hs_video_delay_frame = 3,
	.slim_video_delay_frame = 3,

	.isp_driving_current = ISP_DRIVING_4MA,
	.sensor_interface_type = SENSOR_INTERFACE_TYPE_MIPI,
	.mipi_sensor_type = MIPI_OPHY_NCSI2,
	.mipi_settle_delay_mode = 1,
	.sensor_output_dataformat = SENSOR_OUTPUT_FORMAT_RAW_B,
	.mclk = 24,
	.mipi_lane_num = SENSOR_MIPI_4_LANE,
	.i2c_addr_table = { 0x6c, 0xff },
	.addr_type = IMGSENSOR_I2C_WORD_ADDR,
};

static struct imgsensor_t imgsensor = {
	.mirror = IMAGE_H_MIRROR,
	.sensor_mode = IMGSENSOR_MODE_INIT,
	.shutter = 0x0100,
	.gain = 0xe0,
	.dummy_pixel = 0,
	.dummy_line = 0,
	.current_fps = 300,
	.autoflicker_en = KAL_FALSE,
	.test_pattern = KAL_FALSE,
	.current_scenario_id = MSDK_SCENARIO_ID_CAMERA_PREVIEW,
	.ihdr_en = 0,
	.i2c_write_id = 0x6c,
};

/* Sensor output window information */
static struct SENSOR_WINSIZE_INFO_STRUCT imgsensor_winsize_info[3] = {
	/* Preview */
	{ 2304, 1728, 0000, 0000, 2304, 1728, 2304, 1728, 0000, 0000, 2304, 1728, 0000, 0000, 2304, 1728 },
	/* capture */
	{ 2304, 1728, 0000, 0000, 2304, 1728, 2304, 1728, 0000, 0000, 2304, 1728, 0000, 0000, 2304, 1728 },
	/* video */
	{ 2304, 1728, 0000, 0000, 2304, 1728, 2304, 1728, 0000, 0000, 2304, 1728, 0000, 0000, 2304, 1728 },
};

#endif
